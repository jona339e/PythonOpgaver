[{"name": "test.test_detect_ranges.DetectRanges.test_fifth", "status": "failed", "message": "Lists differ: [-4, -2, 0, (2, 3), 4] != [-4, -2, 0, 2, 4]\n\nFirst differing element 3:\n(2, 3)\n2\n\n- [-4, -2, 0, (2, 3), 4]\n?             -   ----\n\n+ [-4, -2, 0, 2, 4] : Incorrect result for the input list [4, 2, 0, -2, -4]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"C:\\Program Files\\Python312\\Lib\\unittest\\case.py\", line 58, in testPartExecutor\n    yield\n", "  File \"C:\\Program Files\\Python312\\Lib\\unittest\\case.py\", line 634, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Program Files\\Python312\\Lib\\unittest\\case.py\", line 589, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"C:\\Users\\Tec\\Documents\\GitHub\\PythonOpgaver\\Opgaver_dag2\\e10_detect_ranges\\test\\test_detect_ranges.py\", line 43, in test_fifth\n    self.assertEqual(detect_ranges(L), list(reversed(L)), msg=f\"Incorrect result for the input list {L}!\")\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_first", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}, {"name": "test.test_detect_ranges.DetectRanges.test_fourth", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}, {"name": "test.test_detect_ranges.DetectRanges.test_random", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}, {"name": "test.test_detect_ranges.DetectRanges.test_second", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}, {"name": "test.test_detect_ranges.DetectRanges.test_third", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}]